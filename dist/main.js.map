{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/board.js","webpack:///./src/index.js","webpack:///./src/snake.js","webpack:///./src/snakeFood.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;;AAEA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Snake from './snake.js';\nimport SnakeFood from './snakeFood.js';\n\nconst canvas = document.getElementById('snake_canvas');\nconst ctx = canvas.getContext(\"2d\");\nconst width = canvas.width;\nconst height = canvas.height;\nconst snake = new Snake();\nconst food = new SnakeFood(width, height);\nlet playing = true;\n\nclass Board {\n\n  constructor() {\n    this.feedingGround = new Array(width/20);\n    for(let i = 0; i < width/20; i++) {\n      this.feedingGround[i] = new Array(width/20);\n    }\n  }\n\n}\n\n\n\n\n\n\nexport default Board;\n","import Snake from './snake.js';\nimport SnakeFood from './snakeFood.js';\nimport Board from './board.js';\n\nconst canvas = document.getElementById('snake_canvas');\nconst ctx = canvas.getContext(\"2d\");\nconst width = canvas.width;\nconst height = canvas.height;\nconst snake = new Snake();\nconst food = new SnakeFood(width, height);\nconst board = new Board();\nlet playing = true;\n\nfunction randomSpawn() {\n    let x = Math.floor(Math.random() * width/snake.scl);\n    let y = Math.floor(Math.random() * height/snake.scl);\n    snake.x = x;\n    snake.y = y;\n  }\nfunction spawnFood() {\n  let x = Math.floor(Math.random() * width/20);\n  let y = Math.floor(Math.random() * height/20);\n  food.x = x;\n  food.y = y;\n  board.feedingGround[food.x][food.y] = food;\n  console.log(board);\n}\n// board.createBoard();\nfunction setup() {\n  spawnFood(width, height, board);\n  randomSpawn(width, height);\n}\n\nfunction draw() {\n  //draw canvas\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n  if (snake.willCollideWall(canvas.width, canvas.height)) {\n    playing = !playing;\n    console.log('collided with walls', snake.x, 'x', snake.y, 'y');\n  } else {\n    snake.show(ctx);\n    snake.update();\n    food.show(ctx);\n\n    if (playing) {\n      setTimeout(draw, 1000/10);\n    }\n    if (snake.eatFood(food)) {\n      spawnFood(width, height, board);\n    }\n  }\n}\n\nfunction keyPressed(e) {\n  let code = e.keyCode;\n  if (code === 37) {\n    snake.direction(-1, 0);\n  } else if (code === 38) {\n    snake.direction(0, -1);\n  } else if (code === 39) {\n    snake.direction(1, 0);\n  } else if (code === 40) {\n    snake.direction(0, 1);\n  } else if (code === 32) {\n    playing = !playing;\n    if (playing) {\n      draw();\n    }\n  }\n}\nsetup();\nwindow.addEventListener('keydown', keyPressed);\ndraw();\n","\nclass Snake {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.xspeed = 1;\n    this.yspeed = 0;\n    this.scl = 20;\n    this.height = this.scl;\n    this.width = this.scl;\n    //eatenfood technically is 1 for the snake head.\n    this.size = 0;\n    this.tail = [];\n  }\n\n  willCollideWall(width, height) {\n    const nextXMove = this.x + this.xspeed;\n    const nextYMove = this.y + this.yspeed;\n    console.log(this.x, 'x', this.y, 'y');\n    console.log(this.xspeed, 'xspeed', this.yspeed, 'yspeed');\n    if (this.x >= width/20) {\n      return true;\n    } else if (this.y >= width/20) {\n      return true;\n    } else if (this.x < 0) {\n      return true;\n    } else if (this.y < 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  //\n  eatFood(food) {\n    if ((this.x === food.x) && (this.y === food.y)) {\n      this.size++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  direction(x, y) {\n    this.xspeed = x;\n    this.yspeed = y;\n  }\n\n  update() {\n    if (this.tail.length === this.size) {\n      for (let i = 0; i < this.tail.length - 1; i++) {\n        this.tail[i] = this.tail[i + 1];\n      }\n    }\n    this.tail[this.size -1] = { x: this.x, y: this.y };\n\n    this.x = this.x + this.xspeed;\n    this.y = this.y + this.yspeed;\n  }\n\n  show(ctx) {\n    ctx.fillStyle = '#b2ffe4';\n    for (let i = 0; i < this.tail.length; i++) {\n      let currTail = this.tail[i];\n      ctx.fillRect(currTail.x * this.scl, currTail.y *\n        this.scl, this.scl, this.scl);\n    }\n    ctx.fillStyle = '#00b273';\n    ctx.fillRect(this.x * this.scl, this.y * this.scl, this.scl, this.scl);\n  }\n}\n\nmodule.exports = Snake;\n","const FOOD_COLORING = {\n  RED: 'red',\n  PURPLE: 'purple',\n  GREEN: 'green'\n};\nclass SnakeFood {\n\n  constructor(width, height) {\n    this.x = 0;\n    this.y = 0;\n    this.color = FOOD_COLORING;\n    //type, color, size\n  }\n\n  show(ctx) {\n    ctx.fillStyle = 'red';\n    ctx.fillRect(this.x * 20, this.y * 20, 20, 20);\n  }\n\n\n}\n\nmodule.exports = SnakeFood;\n"],"sourceRoot":""}