{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/feedingGround.js","webpack:///./src/index.js","webpack:///./src/snake.js","webpack:///./src/snakeFood.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AClFA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;ACxJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Snake from './snake.js';\nimport SnakeFood from './snakeFood.js';\n\nclass FeedingGround {\n\n  constructor(width, height) {\n    this.snake = new Snake();\n    this.snakeFood = [\n      new SnakeFood(20, 20, 'green'),\n      new SnakeFood(20, 20, 'red'),\n      new SnakeFood(20, 20, 'purple')\n    ];\n    this.width = width;\n    this.height = height;\n    this.playing = true;\n    this.alive = this.snake.alive;\n  }\n\n  generateGrounds() {\n    this.grounds = new Array(this.width/20);\n    for(let i = 0; i < this.width/20; i++) {\n      this.grounds[i] = new Array(this.width/20);\n    }\n  }\n\n  randomSpawn() {\n    const boundsW = Math.floor(this.width/this.snake.scl);\n    const boundsH = Math.floor(this.height/this.snake.scl);\n    let col = Math.floor(Math.random() * boundsW);\n    let row =  Math.floor(Math.random() * boundsH);\n    this.snake.x = col;\n    this.snake.y = row;\n  }\n\n  foodGenerator() {\n    let randomNum1 = Math.floor(Math.random() * this.snakeFood.length);\n    let randomNum2 = Math.floor(Math.random() * this.snakeFood.length);\n    let randomNum3 = Math.floor(Math.random() * this.snakeFood.length);\n    this.spawnFood(this.snakeFood[randomNum1]);\n    this.spawnFood(this.snakeFood[randomNum2]);\n    this.spawnFood(this.snakeFood[randomNum3]);\n  }\n\n  spawnFood(food) {\n    const boundsW = Math.floor(this.width/20);\n    const boundsH = Math.floor(this.height/20);\n    let col = Math.floor(Math.random() * boundsW);\n    let row = Math.floor(Math.random() * boundsH);\n    food.x = col;\n    food.y = row;\n  }\n\n  wallCollision(width) {\n    const bounds = Math.floor(this.width/20);\n    if (this.snake.x >= bounds) {\n      return true;\n    } else if (this.snake.y >= bounds) {\n      return true;\n    } else if (this.snake.x < 0) {\n      return true;\n    } else if (this.snake.y < 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  foodCollision(food) {\n    let rect1 = this.snake;\n    let rect2 = food;\n    if (this.snake.x === food.x && this.snake.y === food.y) {\n      return true;\n    } else {\n      return false;\n    }\n    // if ((((rect2.x > rect1.x)\n    //     && (rect2.x < (rect1.x + rect1.width)))\n    //     || (((rect2.x + rect2.width) > rect1.x)\n    //     && ((rect2.x + rect2.width) < (rect1.x + rect1.width))))\n    //     || (((rect2.y > rect1.y)\n    //     && (rect2.y < (rect1.y + rect1.height)))\n    //     || (((rect2.y + rect2.height) > rect1.y)\n    //     && ((rect2.y + rect2.height) < (rect1.y + rect1.height))))) {\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n  }\n\n  setup() {\n    this.randomSpawn();\n    this.foodGenerator();\n  }\n\n  start(canvas) {\n    const ctx = canvas.getContext('2d');\n    const grid = this.generateGrounds();\n    this.setup();\n    const startAnimation = () => {\n      ctx.fillStyle = 'beige';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      //width same as height so only pass in widght right now\n      if (this.wallCollision(canvas.width)) {\n        this.playing = false;\n        console.log('wall collision');\n      }\n\n      if (this.foodCollision(this.snakeFood[0])) {\n        let randomNum1 = Math.floor(Math.random() * this.snakeFood.length);\n        this.snake.size++;\n        this.spawnFood(this.snakeFood[0]);\n      } else if (this.foodCollision(this.snakeFood[1])) {\n        this.snake.size++;\n        this.spawnFood(this.snakeFood[1]);\n        if (this.snake.eaten === '' || this.snake.eaten === 'purple'){\n          this.snake.eaten = this.snakeFood[1].color;\n        }\n      } else if (this.foodCollision(this.snakeFood[2])) {\n        this.snake.size++;\n        this.spawnFood(this.snakeFood[2]);\n        if (this.snake.eaten === '') {\n          this.snake.eaten = this.snakeFood[2].color;\n        } else if (this.snake.eaten === 'red') {\n          this.snake.eaten = '';\n        }\n      }\n      this.render(ctx);\n      if (this.playing === this.snake.alive) {\n        setTimeout(startAnimation, 100);\n      }\n      // console.log(this.snake.eaten);\n\n    };\n    startAnimation();\n  }\n\n  render(ctx) {\n    for (let i = 0; i < this.snakeFood.length; i++) {\n      this.snakeFood[i].show(ctx);\n    }\n    if (this.snake.isPoisoned()) {\n      this.snake.direction = this.snake.reverse;\n      // console.log(\"you're poisoned\");\n    } else {\n      this.snake.direction = this.snake.reset;\n      // console.log(\"you're cured\");\n    }\n    this.snake.show(ctx);\n    this.snake.update();\n  }\n}\n\nexport default FeedingGround;\n","import Snake from './snake.js';\nimport SnakeFood from './snakeFood.js';\nimport FeedingGround from './feedingGround.js';\n\nconst canvas = document.getElementById('snake_canvas');\nconst fg = new FeedingGround(canvas.width, canvas.height);\nif (fg.playing){\n  fg.start(canvas);\n}\n\nwindow.addEventListener('keydown', keyPressed);\n\nfunction keyPressed(e) {\n  let code = e.keyCode;\n  if (code === 37) {\n    fg.snake.direction(-1, 0);\n  } else if (code === 38) {\n    fg.snake.direction(0, -1);\n  } else if (code === 39) {\n    fg.snake.direction(1, 0);\n  } else if (code === 40) {\n    fg.snake.direction(0, 1);\n  } else if (code === 32) {\n    fg.playing = !fg.playing;\n  }\n\n}\n","\nclass Snake {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.xspeed = 1;\n    this.yspeed = 0;\n    this.scl = 20;\n    this.height = this.scl;\n    this.width = this.scl;\n    this.size = 0;\n    this.tail = [];\n    this.eaten = '';\n    this.alive = true;\n  }\n\n  isPoisoned() {\n    if (this.eaten === 'purple') {\n      this.direction = this.reverse;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  reset(x, y) {\n    this.xspeed = x;\n    this.yspeed = y;\n  }\n\n  direction(x, y) {\n    this.xspeed = x;\n    this.yspeed = y;\n\n  }\n\n  reverse(x, y) {\n    this.xspeed = -x;\n    this.yspeed = -y;\n  }\n\n  update() {\n    for (let i = 0; i < this.tail.length - 1; i++) {\n      this.tail[i] = this.tail[i + 1];\n      if (this.x === this.tail[i].x && this.y === this.tail[i].y) {\n        this.alive = false;\n        console.log('woah ran into self');\n      }\n    }\n    this.tail[this.size -1] = { x: this.x, y: this.y };\n\n    this.x = this.x + this.xspeed;\n    this.y = this.y + this.yspeed;\n  }\n\n  show(ctx) {\n    ctx.fillStyle = '#b2ffe4';\n    for (let i = 0; i < this.tail.length; i++) {\n      let currTail = this.tail[i];\n      ctx.fillRect(currTail.x * this.scl, currTail.y *\n        this.scl, this.scl, this.scl);\n    }\n    // ctx.fillStyle = '#00b273';\n    ctx.fillStyle = 'black';\n    ctx.fillRect(this.x * this.scl, this.y * this.scl, this.scl, this.scl);\n  }\n}\n\nmodule.exports = Snake;\n","\nclass SnakeFood {\n  constructor(width, height, color) {\n    this.x = 0;\n    this.y = 0;\n    this.width = 20;\n    this.height = 20;\n    this.color = color;\n    //type, color, size\n  }\n\n  show(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x * 20, this.y* 20, this.width, this.height);\n  }\n}\n\nmodule.exports = SnakeFood;\n"],"sourceRoot":""}